<?php
// $Id$

/**
* Display help and module information
* @param path which path of the site we're displaying help
* @param arg array that holds the current path as would be returned from arg() function
* @return help text for the path
*/
function subnav_help($path, $arg) {
  $output = '';  //declare your output variable
  switch ($path) {
    case "admin/help#subnav":
      $output = '<p>'.  t("Displays the subnavigation links but skips the top-most level of links. Be sure to enable the block in the block configuration page.") .'</p>';
      break;
  }
  return $output;
} // function subnav_help

/**
* Valid permissions for this module
* @return array An array of valid permissions for the subnav module
*/
function subnav_perm() {
  return array('access subnav content');
} // function subnav_perm()

/**
* Generate HTML for the subnav block
* @param op the operation from the URL
* @param delta offset
* @returns block HTML
*/
function subnav_block($op='list', $delta=0) {

  if ($op == "list") {
    // Generate listing of blocks from this module, for the admin/block page
    $block[0] = array(
		  'info' => t('Subnavigation Block'),
		  'cache' => BLOCK_NOT_CACHEABLE
	  );
    return $block;
  }
  else if ($op == 'view') {

    // Generate our block content

    // content variable that will be returned for display
    $block_content = '';

	// Get the Primary Links variable name
	$active_menu = variable_get('menu_primary_links_source', 'primary-links');
		
	if ($active_menu != "navigation") {
	  $tree = menu_tree_page_data($active_menu);
	  foreach($tree as $key => $mi) {
	    if ($mi['link']['in_active_trail'] && $tree[$key]['below']) {
		  $menu = menu_tree_output($tree[$key]['below']);         
		}
	  }
	}
    
	$block_content = $menu;
	
	$block['content'] = $block_content;
	
    return $block;
  }
}  // end subnav_block